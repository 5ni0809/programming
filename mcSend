#include <sys/types.h>
#include <winsock2.h>
#include <ws2tcpip.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LEN     1024
int main(int argc, char *argv[])
{
	int                sock;
	int                passcode;
	char               send_str[MAX_LEN];
	char               p1[MAX_LEN], p2[MAX_LEN];
	struct sockaddr_in mc_addr;
	char*              mc_addr_str;
	unsigned short     mc_port;
	unsigned char      mc_ttl = 1;
	int                ret;
	int                send_len;
	WSADATA            wsaData;
	if (argc != 3) {
		fprintf(stderr, "Usage:%s<Multicast IP> <Port>\n", argv[0]);
		exit(0);
	}
	mc_addr_str = argv[1];  //將命令列參數存起來
	mc_port = atoi(argv[2]);
	if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {
		fprintf(stderr, "WSAStartup failed!\n");
		exit(1);
	}
	sock = socket(AF_INET, SOCK_DGRAM, 0);//使用UDP sock
	if (sock < 0) {
		fprintf(stderr, "socket() failed\n");
		exit(1);
	}
	ret = setsockopt(sock, IPPROTO_IP, IP_MULTICAST_TTL, (void*)&mc_ttl, sizeof(mc_ttl));//限制群播的範圍
	if (ret < 0)
	{
		fprintf(stderr, "setsockopt() for ttlfailed\n");
		exit(1);
	}
	memset(&mc_addr, 0, sizeof(mc_addr));
	mc_addr.sin_family = AF_INET;
	mc_addr.sin_addr.s_addr = inet_addr(mc_addr_str);
	mc_addr.sin_port = htons(mc_port);
	printf("Begin typing (return to send, ctrl-c to quit):\n");

	memset(send_str, 0, sizeof(send_str));
	printf("請輸入通行碼: ");
	scanf("%s", p1);
	while (fgets(send_str, MAX_LEN, stdin))
	{
		send_len = strlen(send_str);
		for (int i = 0; i < passcode; i++)
			p2[i] = p1[i];
		for (int i = passcode; i < send_len + passcode; i++)
			p2[i] = send_str[i - passcode];
		send_len = strlen(p2);
		ret = sendto(sock, p2, send_len, 0, (struct sockaddr *)&mc_addr, sizeof(mc_addr));
		if (ret != send_len) {
			fprintf(stderr, "sendto() sent icorrect number of bytes.\n");
			exit(1);
		}
		memset(send_str, 0, sizeof(send_str));
	}
	closesocket(sock);
	WSACleanup();
}
